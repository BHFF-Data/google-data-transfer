from abc import ABC, abstractmethod
from dataclasses import dataclass

import pandas as pd


@dataclass
class TransferConfig(ABC):
    """A class to represent a transfer configuration.

    Attributes:
        columns_join_map : a dictionary mapping the column names of the source dataframe to the column names of the target dataframe
        target_col : the name of the target column
        name : the name of the transfer configuration

    !!! note

        The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)
    """

    columns_join_map: dict[str:str]
    target_col: str
    name: str

    def __init__(
        self,
        columns_join_map: dict[str:str],
        target_col: str,
        name: str,
    ):
        """A class to represent a person.

        Attributes:
            columns_join_map : a dictionary mapping the columns to join
            target_col : the target column
            name : the name of the person
            transfer_function : the transfer function

        !!! note

            The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)
        """
        self.columns_join_map = columns_join_map
        self.target_col = target_col
        self.name = name

    @abstractmethod
    def transfer(self, df: pd.DataFrame) -> pd.DataFrame:
        ...
