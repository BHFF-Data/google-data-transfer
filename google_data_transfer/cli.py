import logging
from typing import Optional

import gin
import typer
from google_data_transfer.controller import main
from google_data_transfer.transfer_configs.pickler import pickle_config
from google_data_transfer.transfer_configs.transfer_config import make_config_id

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)
app = typer.Typer()


@app.command(name="transfer")
def cli_main(
    form_url: str,
    sheet_url: str,
    sheet_name: str,
    target_col: Optional[str] = typer.Option(None),
    transfer_config: Optional[str] = "Mentoring Reports Default",
):
    """    A CLI to transfer data from a Google Form to a Google Sheet.

    Args:
        form_url: The URL of the Google Form
        sheet_url: The URL of the Google Sheet
        sheet_name: The name of the sheet in the Google Sheet
        target_col: The name of the column in the Google Sheet to which the data should be transferred
        transfer_config: The name of the transfer configuration to use

    !!! note

        The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)
    """
    transfer_config_id = make_config_id(transfer_config)
    sheet_name = sheet_name.replace("_", " ")  # typer can't accept strings with a space
    if target_col is not None:
        target_col = target_col.replace("_", " ")
    main(form_url, sheet_url, sheet_name, target_col, transfer_config_id)


@app.command()
def pickle(transfer_config: str):
    """Pickle a transfer configuration

    Args:
        transfer_config: The transfer configuration to pickle

    !!! note

        The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)
    """
    transfer_config_id = make_config_id(transfer_config)
    pickle_config(transfer_config_id)
    logger.info(f"Pickled {transfer_config}")


if __name__ == "__main__":
    gin.parse_config_file("config/local.gin")
    app()
